--- a/modules/nixos/main.py
+++ b/modules/nixos/main.py
@@ -376,9 +376,11 @@ def run():
 
     # Setup encrypted swap devices. nixos-generate-config doesn't seem to notice them.
     for part in gs.value("partitions"):
+        luks_swap = None
         if part["claimed"] == True and part["fsName"] == "luks" and part["device"] is not None and part["fs"] == "linuxswap":
-            cfg += """  boot.initrd.luks.devices."{}".device = "/dev/disk/by-uuid/{}";\n""".format(
+            luks_swap = """  boot.initrd.luks.devices."{}".device = "/dev/disk/by-uuid/{}";\n""".format(
                 part["luksMapperName"], part["uuid"])
+            cfg += luks_swap
 
     # Check partitions
     for part in gs.value("partitions"):
@@ -642,11 +644,50 @@ def run():
         # Write the hardware-configuration.nix file
         libcalamares.utils.host_env_process_output(["cp", "/dev/stdin",
                                                     root_mount_point+"/etc/nixos/hardware-configuration.nix"], None, hardwareout)
+    # Add luks swap partition if it exists
+    if luks_swap is not None:
+        with open(root_mount_point + "/etc/nixos/hardware-configuration.nix", "r") as hf:
+            htxt = hf.read()
+        if htxt.strip().endswith("}"):
+            htxt = htxt.strip("}\n").rstrip()
+        htxt += luks_swap + "\n}\n"
+        libcalamares.utils.host_env_process_output(["cp", "/dev/stdin",
+                                                    root_mount_point+"/etc/nixos/hardware-configuration.nix"], None, htxt)
 
     # Write the configuration.nix file
     libcalamares.utils.host_env_process_output(
         ["cp", "/dev/stdin", config], None, cfg)
 
+    # Copying user provided configuraitons
+    dynamic_config = "/tmp/nix-cfg/nixos/configuration.nix"
+    iso_config = "/iso/nix-cfg/nixos/configuration.nix"
+    config_dest = os.path.join(root_mount_point, "etc/nixos/configuration.nix")
+
+    try:
+        if os.path.exists (dynamic_config):
+            src_dir = "/tmp/nix-cfg/"
+            dest_dir = os.path.join(root_mount_point, "etc/nixos/")
+            for file in os.listdir(src_dir):
+                src_file = os.path.join(src_dir, file)
+                dest_file = os.path.join(dest_dir, file)
+                if os.path.isdir(src_file):
+                    subprocess.run(["sudo", "cp", "-r", src_file, dest_file], check=True)
+                else:
+                    subprocess.run(["sudo", "cp", src_file, dest_file], check=True)
+
+        elif os.path.exists(iso_config):
+            src_dir = "/iso/nix-cfg/"
+            dest_dir = os.path.join(root_mount_point, "etc/nixos/")
+            for file in os.listdir(src_dir):
+                src_file = os.path.join(src_dir, file)
+                dest_file = os.path.join(dest_dir, file)
+                if os.path.isdir(src_file):
+                    subprocess.run(["sudo", "cp", "-r", src_file, dest_file], check=True)
+                else:
+                    subprocess.run(["sudo", "cp", src_file, dest_file], check=True)
+    except subprocess.CalledProcessError as e:
+        return ("Installation failed to copy configuration files", str(e))
+
     status = _("Installing NixOS")
     libcalamares.job.setprogress(0.3)
 
@@ -663,6 +704,7 @@ def run():
         exit = proc.wait()
         if exit != 0:
             return (_("nixos-install failed"), _(output))
+
     except:
         return (_("nixos-install failed"), _("Installation failed to complete"))
 
